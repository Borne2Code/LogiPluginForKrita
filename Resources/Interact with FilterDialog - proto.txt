###########################################################################################
####                      Interact with filters Panel                                 #####
###########################################################################################

from krita import *
import time

FilteredChildren = list(filter(lambda w: w.objectName() == 'FilterDialog', Krita.instance().activeWindow().qwindow().children()))
if len(FilteredChildren) == 0:
    print("No filter")
else:
    dialog = FilteredChildren[0]

    filterconfig = dialog.children()[1].children()[-1].children()[0].children()[0].children()[1].children()[1]
    print(list(map(lambda w: w.objectName(), filterconfig.children())))

    obj = filterconfig.children()[16]

    for i in range(0, 50, 5):
        obj.setValue(i)
        QApplication.processEvents()
        time.sleep(0.05)

#spinboxinputblack = .children()[0].children()[0].children()[1].children()[1].children()[16].children()[0]
#print(spinboxinputblack.objectName())
#print(spinboxinputblack)
#print(dir(spinboxinputblack))

###########################################################################################
####                      Interact with filters treeView                              #####
###########################################################################################

from krita import *
import time

def listChildrenWidgets(widget, prefix = ""):
    for w in widget.children():
            print(f"{prefix}{w.objectName()} [{type(w).__name__}]")
            listChildrenWidgets(w, prefix + "  ")

def listCHildrenNodes(dialog, filterList, index, prefix = ""):
    model = filterList.model()
    for id in range(0, model.rowCount(index)):
        childIndex = model.index(id, 0, index)
        print(f"{prefix}{model.data(childIndex)}")
        filterList.setCurrentIndex(childIndex)
        filterList.clicked.emit(childIndex)
        QCoreApplication.processEvents()
        filterconfig = dialog.children()[1].children()[-1].children()[0].children()[0].children()[1].children()[1]
        listChildrenWidgets(filterconfig, prefix + "|  ");
        listCHildrenNodes(dialog, filterList, childIndex, prefix + "  ")

def listTreeViewNodes(dialog, filterList):
    model = filterList.model()
    for id in range(0, model.rowCount()):
        index = model.index(id, 0)
        parent = model.data(index)
        print(f"  {parent}")
        listCHildrenNodes(dialog, filterList, index, "    ")
    
FilteredChildren = list(filter(lambda w: w.objectName() == 'FilterDialog', Krita.instance().activeWindow().qwindow().children()))
if len(FilteredChildren) == 0:
    print("No filter Dialog")
else:
    dialog = FilteredChildren[0]
    filterlist = dialog.children()[1].children()[1]
    print(type(filterlist).__name__)
    listTreeViewNodes(dialog, filterlist)